"""Initialise LDAP schema.

Revision ID: 275222846605
Revises: 692ae64e0cc5
Create Date: 2025-03-05 12:19:03.407487

"""

import json

import sqlalchemy as sa
from alembic import op
from ldap3.protocol.schemas.ad2012R2 import ad_2012_r2_schema
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.orm import Session

from ldap_protocol.utils.ldap3_parser import Ldap3Parser

# revision identifiers, used by Alembic.
revision = "275222846605"
down_revision = "692ae64e0cc5"
branch_labels = None
depends_on = None

# NOTE: ad_2012_r2_schema_json is AD schema for Windows Server 2012 R2
ad_2012_r2_schema_json = json.loads(ad_2012_r2_schema)


def upgrade() -> None:
    """Upgrade."""

    async def _create_object_classes(connection):
        session = AsyncSession(bind=connection)
        await session.begin()

        oc_raw_definitions = ad_2012_r2_schema_json["raw"]["objectClasses"]
        oc_raw_definitions_filtered = [
            defenition
            for defenition in oc_raw_definitions
            if "NAME 'ms" not in defenition and "NAME 'mS-" not in defenition
        ]

        for oc_raw_definition in oc_raw_definitions_filtered:
            object_class = await Ldap3Parser.get_object_class(
                session=session,
                raw_definition=oc_raw_definition,
            )
            object_class.is_system = True
            session.add(object_class)
        await session.commit()
        await session.close()

    bind = op.get_bind()
    session = Session(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "AttributeTypes",
        sa.Column("oid", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("syntax", sa.String(), nullable=False),
        sa.Column("single_value", sa.Boolean(), nullable=False),
        sa.Column("no_user_modification", sa.Boolean(), nullable=False),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("oid"),
        sa.PrimaryKeyConstraint("name"),
    )

    op.create_table(
        "ObjectClasses",
        sa.Column("oid", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("superior", sa.String(), nullable=True),
        sa.Column(
            "kind",
            sa.Enum("AUXILIARY", "STRUCTURAL", "ABSTRACT", native_enum=False),
            nullable=False,
        ),
        sa.Column("is_system", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("oid"),
        sa.PrimaryKeyConstraint("name"),
    )

    op.create_table(
        "ObjectClassAttributeTypeMayMemberships",
        sa.Column("attribute_type_name", sa.String(), nullable=False),
        sa.Column("object_class_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attribute_type_name"],
            ["AttributeTypes.name"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["object_class_name"],
            ["ObjectClasses.name"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("attribute_type_name", "object_class_name"),
    )
    op.create_unique_constraint(
        "object_class_may_attribute_type_uc",
        "ObjectClassAttributeTypeMayMemberships",
        ["attribute_type_name", "object_class_name"],
    )

    op.create_table(
        "ObjectClassAttributeTypeMustMemberships",
        sa.Column("attribute_type_name", sa.String(), nullable=False),
        sa.Column("object_class_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attribute_type_name"],
            ["AttributeTypes.name"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["object_class_name"],
            ["ObjectClasses.name"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("attribute_type_name", "object_class_name"),
    )
    op.create_unique_constraint(
        "object_class_must_attribute_type_uc",
        "ObjectClassAttributeTypeMustMemberships",
        ["attribute_type_name", "object_class_name"],
    )
    # ### end Alembic commands ###

    # NOTE: Load attributeTypes into the database
    at_raw_definitions = ad_2012_r2_schema_json["raw"]["attributeTypes"]
    at_raw_definitions_filtered = [
        defenition
        for defenition in at_raw_definitions
        if "NAME 'ms" not in defenition and "NAME 'mS-" not in defenition
    ]
    for at_raw_definition in at_raw_definitions_filtered:
        attribute_type = Ldap3Parser.get_attribute_type(
            raw_definition=at_raw_definition
        )
        attribute_type.is_system = True
        session.add(attribute_type)
    session.commit()

    # NOTE: Load objectClasses into the database
    op.run_async(_create_object_classes)


def downgrade() -> None:
    """Downgrade."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "object_class_must_attribute_type_uc",
        "ObjectClassAttributeTypeMustMemberships",
        type_="unique",
    )
    op.drop_table("ObjectClassAttributeTypeMustMemberships")

    op.drop_constraint(
        "object_class_may_attribute_type_uc",
        "ObjectClassAttributeTypeMayMemberships",
        type_="unique",
    )
    op.drop_table("ObjectClassAttributeTypeMayMemberships")

    op.drop_table("ObjectClasses")
    op.drop_table("AttributeTypes")
    # ### end Alembic commands ###

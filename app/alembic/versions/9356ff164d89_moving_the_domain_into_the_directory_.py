"""Moving the domain into the Directory entity

Revision ID: 9356ff164d89
Revises: 563b850ca7e1
Create Date: 2024-07-31 07:16:21.242262

"""
from alembic import op
from sqlalchemy import delete, orm, select, or_

from models.ldap3 import CatalogueSetting, Directory, Path
from ldap_protocol.utils import get_domain_attrs


# revision identifiers, used by Alembic.
revision = '9356ff164d89'
down_revision = '563b850ca7e1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    domain = session.scalar(select(CatalogueSetting).where(
        CatalogueSetting.name == 'defaultNamingContext'))

    if not bool(domain):
        return

    sid = session.scalar(select(CatalogueSetting).filter(
        CatalogueSetting.name == 'domain_object_sid'))
    guid = session.scalar(select(CatalogueSetting).filter(
        CatalogueSetting.name == 'domain_object_guid'))

    domain = domain.value
    base_directory = Directory(
        name=domain,
        object_class='domain',
        object_sid=sid.value,
        object_guid=guid.value,
    )
    domain_path = [
        f"dc={path}"
        for path in reversed(domain.split('.'))
    ]
    path = Path(path=domain_path, endpoint=base_directory)
    base_directory.paths.append(path)
    session.add_all([base_directory, path])
    session.flush()

    for directory in session.query(Directory).join(Directory.path):
        if directory.is_domain:
            continue
        if not directory.parent_id and not directory.is_domain:
            directory.parent_id = base_directory.id
        directory.path.path = path.path + directory.path.path
        directory.depth = len(directory.path.path)

    session.execute(delete(CatalogueSetting).where(or_(
        CatalogueSetting.name == 'domain_object_sid',
        CatalogueSetting.name == 'domain_object_guid',
        CatalogueSetting.name == 'defaultNamingContext',
    )))

    session.add_all(get_domain_attrs(base_directory))

    session.commit()

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    base_directory = session.scalar(select(Directory).where(
        Directory.parent_id.is_(None)))

    if not bool(base_directory):
        return

    len_domain_path = len(base_directory.path.path)

    for directory in session.query(Directory):
        if directory.is_domain:
            continue
        if directory.parent_id == base_directory.id:
            directory.parent_id = None
        directory.depth -= len_domain_path
        directory.path.path = directory.path.path[len_domain_path:]

    session.add(
        CatalogueSetting(name='defaultNamingContext', value=base_directory.name))
    session.add(
        CatalogueSetting(name='domain_object_sid', value=base_directory.object_sid))
    session.add(CatalogueSetting(
        name='domain_object_guid', value=str(base_directory.object_guid)))
    session.delete(base_directory)

    session.commit()

    # ### end Alembic commands ###

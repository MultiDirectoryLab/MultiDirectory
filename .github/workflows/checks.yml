name: process_pull_request
on:
  push:
    branches: [main]
  pull_request: null

env:
  REPO: ${{ github.repository }}

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build linters
        env:
          TAG: ghcr.io/${{ env.REPO }}_linters:latest
          NEW_TAG: linter
        run: docker build --target=runtime -f .docker/lint.Dockerfile . -t $NEW_TAG --cache-to type=gha,mode=max --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Run linters
        env:
          NEW_TAG: linter
        run: docker run $NEW_TAG ruff check

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build linters
        env:
          TAG: ghcr.io/${{ env.REPO }}_linters:latest
          NEW_TAG: linter
        run: docker build --target=runtime -f .docker/lint.Dockerfile . -t $NEW_TAG --cache-to type=gha,mode=max --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Run linters
        env:
          NEW_TAG: linter
        run: docker run $NEW_TAG flake8

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build linters
        env:
          TAG: ghcr.io/${{ env.REPO }}_linters:latest
          NEW_TAG: linter
        run: docker build --target=runtime -f .docker/lint.Dockerfile . -t $NEW_TAG --cache-to type=gha,mode=max --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Run linters
        env:
          NEW_TAG: linter
        run: docker run $NEW_TAG mypy .

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build tests
        env:
          TAG: ghcr.io/${{ env.REPO }}_test:latest
          NEW_TAG: tests
        run: docker build --target=runtime -f .docker/test.Dockerfile . -t $NEW_TAG --cache-to type=gha,mode=max --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1
      - name: Run tests
        env:
          NEW_TAG: tests
        run: docker compose -f docker-compose.remote.test.yml up --no-log-prefix --attach md-test --exit-code-from md-test
name: build
on:
  push:
    branches:
      - main

env:
  REPO: ${{ github.repository }}

jobs:
  build-tests:
    runs-on: ubuntu-latest
    steps:
      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        env:
          TAG: ghcr.io/${{ env.REPO }}_test:latest
          DOCKER_BUILDKIT: '1'
        run: |
          echo $TAG
          docker build -f .docker/test.Dockerfile . --tag $TAG --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1
          docker push $TAG

  run-tests:
    runs-on: ubuntu-latest
    needs: build-tests
    steps:
      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull tests
        env:
          TAG: ghcr.io/${{ env.REPO }}_test:latest
        run: docker-compose -f docker-compose.remote.test.yml pull
      - name: Run tests
        env:
          TAG: ghcr.io/${{ env.REPO }}_test:latest
        run: docker-compose -f docker-compose.remote.test.yml up
      - name: Teardown tests
        env:
          TAG: ghcr.io/${{ env.REPO }}_test:latest
        run: docker-compose -f docker-compose.remote.test.yml down

  build-app:
    runs-on: ubuntu-latest
    needs: [build-tests, run-tests]
    steps:
      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build docker image
        env:
          TAG: ghcr.io/${{ env.REPO }}:latest
          TAG2: ghcr.io/${{ env.REPO }}:${{ steps.vars.outputs.sha_short }}
          DOCKER_BUILDKIT: '1'
        run: |
          echo $TAG
          docker build -f .docker/Dockerfile . -t $TAG -t $TAG2 --cache-from $TAG --build-arg BUILDKIT_INLINE_CACHE=1
          docker push $TAG:latest $TAG2

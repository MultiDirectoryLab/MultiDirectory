# Copyright (c) 2024 MultiFactor
# License: https://github.com/MultiDirectoryLab/MultiDirectory/blob/main/LICENSE

services:

  pre_run_manager:
    image: ghcr.io/multidirectorylab/multidirectory_test:beta
    container_name: pre_run_manager
    user: root
    restart: "no"
    volumes:
      - certs:/certs
      - ./entrypoint.sh:/app/entrypoint.sh
    command: sh -c "/app/extra/pre_run_setup.sh"
  migrations:
    image: ghcr.io/multidirectorylab/multidirectory_test:beta
    container_name: multidirectory_migrations
    restart: "no"
    environment:
      DOMAIN: md.multifactor.dev
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: test_pwd
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
    command: python multidirectory.py --migrate
    depends_on:
      postgres:
        condition: service_healthy
      pre_run_manager:
        condition: service_completed_successfully

  cert_check:
    image: ghcr.io/multidirectorylab/multidirectory_test:beta
    container_name: multidirectory_certs_check
    restart: "no"
    command: ./extra/generate_cert.sh
    volumes:
      - certs:/certs
    depends_on:
      pre_run_manager:
        condition: service_completed_successfully


  api_server:
    image: ghcr.io/multidirectorylab/multidirectory_test:beta
    container_name: multidirectory_api
    restart: unless-stopped
    command: python multidirectory.py --http
    environment:
      USE_CORE_TLS: 1
      DOMAIN: md.multifactor.dev
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: test_pwd
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
      MFA_API_SOURCE: dev
    hostname: api_server
    depends_on:
      migrations:
        condition: service_completed_successfully
      cert_check:
        condition: service_completed_successfully
    volumes:
      - certs:/certs
    ports:
      - 8000:8000
    healthcheck:
      test: curl --fail http://localhost:8000/auth/setup || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 3s

  multidirectory_ldap:
    image: ghcr.io/multidirectorylab/multidirectory_test:beta
    container_name: multidirectory_ldap
    restart: unless-stopped
    hostname: multidirectory_ldap
    entrypoint: ./entrypoint.sh
    volumes:
      - certs:/certs
      - ./entrypoint.sh:/app/entrypoint.sh
    environment:
      DOCKER_DEFAULT_PLATFORM: linux/arm64
      DOMAIN: md.multifactor.dev
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: test_pwd
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
      MFA_API_SOURCE: dev
    expose:
      - 389
    depends_on:
      dragonfly:
        condition: service_started
      migrations:
        condition: service_completed_successfully
      cert_check:
        condition: service_completed_successfully

  postgres:
    container_name: MD-ssh-postgres
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: test_pwd
      PGDATA: /data/postgres
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U user"]
      interval: 1s
      timeout: 15s
      retries: 10
      start_period: 3s

  ssh:
    container_name: md-ssh
    image: ghcr.io/multidirectorylab/multidirectory_ssh_test:beta
    environment:
      SERVER: "ldap://multidirectory_ldap"
      BASE: "dc=md,dc=multifactor,dc=dev"
      BIND_DN: "admin"
      BASE_PASSWORD: "Password123"
    ports:
      - "222:22"
    healthcheck:
      test: service ssh status | grep 'sshd is running.'
      interval: 1s
      timeout: 15s
      retries: 10
      start_period: 3s

  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    container_name: dragonfly
    expose:
      - 6379
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2GiB
        reservations:
          cpus: '0.75'
          memory: 0.5GiB

  connect:
    image: ghcr.io/multidirectorylab/multidirectory:beta
    depends_on:
      ssh:
        condition: service_healthy
      multidirectory_ldap:
        condition: service_started
      api_server:
        condition: service_healthy

volumes:
  certs:

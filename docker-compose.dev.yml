version: "3.7"

services:
  traefik:
    image: "traefik:latest"
    container_name: traefik
    restart: unless-stopped
    command:
      # - --metrics
      # - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - "--log.level=ERROR"
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # - --accesslog=true
      # - --accesslog.filepath=/var/log/traefik/access.log
      - --accesslog.format=json

      - --certificatesresolvers.md-resolver.acme.tlschallenge=true
      - --certificatesresolvers.md-resolver.acme.email=support@multifactor.com
      - --certificatesresolvers.md-resolver.acme.storage=/letsencrypt/acme.json

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entryPoints.websecure.http.tls=true
      - --entryPoints.websecure.http.tls.certResolver=md-resolver

      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./certs:/letsencrypt

    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 96M
        reservations:
          cpus: '0.25'
          memory: 32M

  interface:
    image: ghcr.io/multifactorlab/multidirectory-web-admin:latest
    container_name: multidirectory_interface
    restart: unless-stopped
    hostname: interface
    environment:
      API_URL: https://${DOMAIN}/api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.interface.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.interface.entrypoints=websecure"
      - "traefik.http.routers.interface.tls.certresolver=md-resolver"
      - "traefik.http.services.interface.loadbalancer.server.port=80"

  migrations:
    image: ghcr.io/multifactorlab/multidirectory:latest
    container_name: multidirectory_migrations
    restart: "no"
    environment:
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 4002afa6900c4072a5577a30de99633e
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
    command: alembic upgrade head
    depends_on:
      postgres:
        condition: service_healthy

  ldap_server:
    image: ghcr.io/multifactorlab/multidirectory:latest
    container_name: multidirectory-ldap
    restart: unless-stopped
    hostname: multidirectory-ldap
    volumes:
      - ./certs:/certs
      - ./logs:/app/logs
    command: python . --loop uvloop
    tty: true
    environment:
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 4002afa6900c4072a5577a30de99633e
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
      MFA_API_SOURCE: dev
    ports:
      - 389:389
    labels:
      - traefik.enable=true
      - traefik.tcp.routers.ldap_server.rule=HostSNI(`*`)
      - traefik.tcp.routers.ldap_server.service=ldap_server-svc
      - traefik.tcp.routers.ldap_server.entrypoints=ldap
    depends_on:
      migrations:
        condition: service_completed_successfully

  ldaps_server:
    image: ghcr.io/multifactorlab/multidirectory:latest
    container_name: multidirectory-ldaps
    restart: unless-stopped
    hostname: multidirectory-ldaps
    environment:
      PORT: 636
      USE_CORE_TLS: 1
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 4002afa6900c4072a5577a30de99633e
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
      MFA_API_SOURCE: dev
    depends_on:
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./app:/app
      - ./certs:/certs
      - ./logs:/app/logs
    command: python . --loop uvloop
    tty: true
    ports:
      - 636:636

  api_server:
    image: ghcr.io/multifactorlab/multidirectory:latest
    container_name: multidirectory_api
    restart: unless-stopped
    environment:
      USE_CORE_TLS: 1
      DEBUG: 1
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 4002afa6900c4072a5577a30de99633e
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d74
      MFA_API_SOURCE: dev
    hostname: api_server
    volumes:
      - ./app:/app
      - ./certs:/certs
      - ./logs:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.tls.certresolver=md-resolver"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.routers.api.middlewares=api_strip"
      - "traefik.http.middlewares.api_strip.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api_strip.stripprefix.forceslash=false"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https,wss"


    command: uvicorn --factory web_app:create_app --host 0.0.0.0 --port 8000 --loop uvloop --reload
    depends_on:
      migrations:
        condition: service_completed_successfully

  postgres:
    container_name: MD-postgres
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 4002afa6900c4072a5577a30de99633e
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U user"]
      interval: 1s
      timeout: 15s
      retries: 10
      start_period: 3s

  # ssh-server:
  #   container_name: md-ssh
  #   image: ssh-ldap
  #   build:
  #     context: ./ssh
  #   environment:
  #     SERVER: "ldap://multidirectory"
  #     BASE: "dc=multifactor,dc=dev"
  #     BIND_DN: "cn=user,dc=multifactor,dc=dev"
  #     BASE_PASSWORD: "password"
  #   ports:
  #     - "222:22"

  # wireshark:
  #   image: lscr.io/linuxserver/wireshark:latest
  #   container_name: wireshark
  #   cap_add:
  #     - NET_ADMIN
  #   security_opt:
  #     - seccomp:unconfined
  #   network_mode: host
  #   environment:
  #     - PUID=1001
  #     - PGID=1001
  #     - TZ=Etc/UTC
  #   volumes:
  #     - wireshark:/config
  #   ports:
  #     - 3000:3000
  #   restart: "no"

volumes:
  traefik:
  postgres:
  pgadmin:
  wireshark:


version: '3.8'

services:
  traefik:
    image: "traefik:v2.6"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "4"
        tag: "{{.Name}}"
    command:
      # - --metrics
      # - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --log.level=ERROR
      # --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.network=md
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/run/secrets/traefik.yaml
      # - --accesslog=true
      # - --accesslog.filepath=/var/log/traefik/access.log
      - --accesslog.format=json

        #- --certificatesresolvers.md-resolver.acme.tlschallenge=true
        #- --certificatesresolvers.md-resolver.acme.email=support@multifactor.com
        #- --certificatesresolvers.md-resolver.acme.storage=/letsencrypt/acme.json

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entryPoints.websecure.http.tls=true
      - --entrypoints.ldap.address=:389
      - --entrypoints.ldaps.address=:636

      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
    secrets:
      - traefik.yaml
      - cert.pem
      - privkey.pem
    ports:
      - "80:80"
      - "389:389"
      - "636:636"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 96M
        reservations:
          cpus: '0.25'
          memory: 32M
    networks:
      - md

  interface:
    image: ${MD_WEB_ADMIN_IMAGE}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "4"
        tag: "{{.Name}}"
    hostname: interface
    environment:
      API_URL: https://${DOMAIN}/api
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.interface.rule=Host(`${DOMAIN}`)"
        - "traefik.http.routers.interface.entrypoints=websecure"
        - "traefik.http.services.interface.loadbalancer.server.port=80"
      replicas: 2
    networks:
      - md

  ldap_server:
    image: ${MD_IMAGE}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "4"
        tag: "{{.Name}}"
    hostname: multidirectory-ldap
    env_file:
      .env
    volumes:
      - logs:/app/logs
    secrets:
      - source: privkey.pem
        target: /certs/privkey.pem
      - source: cert.pem
        target: /certs/cert.pem
    command: python -OO . --loop uvloop
    networks:
      - md
    deploy:
      labels:
        - "traefik.enable=true"

        - "traefik.tcp.routers.ldap.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.ldap.entrypoints=ldap"
        - "traefik.tcp.routers.ldap.service=ldap"
        - "traefik.tcp.services.ldap.loadbalancer.server.port=389"

        - "traefik.tcp.routers.ldaps.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.ldaps.entrypoints=ldaps"
        - "traefik.tcp.routers.ldaps.service=ldaps"
        - "traefik.tcp.services.ldaps.loadbalancer.server.port=636"
      replicas: 4

  api_server:
    image: ${MD_IMAGE}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "4"
        tag: "{{.Name}}"
    env_file:
      .env
    hostname: api_server
    environment:
      USE_CORE_TLS: 1
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)"
        # - "traefik.http.routers.api.tls.certresolver=md-resolver"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.services.api.loadbalancer.server.port=8000"
        - "traefik.http.routers.api.service=api"
        - "traefik.http.routers.api.middlewares=api_strip"
        - "traefik.http.middlewares.api_strip.stripprefix.prefixes=/api"
        - "traefik.http.middlewares.api_strip.stripprefix.forceslash=false"
      replicas: 2
    networks:
      - md
    command: uvicorn --factory web_app:create_app --host 0.0.0.0 --port 8000 --loop uvloop

  pgpool:
    image: bitnamilegacy/pgpool:latest
    hostname: 'postgres'
    ports:
      - 5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432
      - PGPOOL_SR_CHECK_USER=${POSTGRES_USER}
      - PGPOOL_SR_CHECK_PASSWORD=${POSTGRES_PASSWORD}
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=${POSTGRES_USER}
      - PGPOOL_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPOOL_ADMIN_USERNAME=${POSTGRES_USER}
      - PGPOOL_ADMIN_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - md
 
  pg-0:
    image: docker.io/bitnami/postgresql-repmgr:16
      #ostname: 'postgres'
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "4"
        tag: "{{.Name}}"
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRES_DB}
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-0,pg-1:5432
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
      - REPMGR_PORT_NUMBER=5432
      #
    volumes:
      - pg-primary-vol:/bitnami/postgresql
    networks:
      - md
    deploy:
      placement:
        constraints:
          - node.labels.type == primary

  pg-1:
    image: docker.io/bitnami/postgresql-repmgr:16
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "4"
        tag: "{{.Name}}"
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRES_DB}
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-0,pg-1:5432
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
      - REPMGR_PORT_NUMBER=5432
    volumes:
      - pg-replica-vol:/bitnami/postgresql
    networks:
      - md
    deploy:
      placement:
        constraints:
          - node.labels.type != primary

secrets:
   traefik.yaml:
     file: traefik.yaml
   cert.pem:
     file: certs/cert-md.pem
   privkey.pem:
     file: certs/privkey-md.pem

volumes:
  traefik:
  pg-replica-vol:
  pg-primary-vol:
  logs:

networks:
  md:
    attachable: true
    name: md

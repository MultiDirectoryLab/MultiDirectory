# For local development

version: "3.7"

services:
  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  md:
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
    image: multidirectory
    restart: "no" #unless-stopped
    container_name: multidirectory
    volumes:
      - ./app:/app
      - ./certs:/certs
    environment:
      DEBUG: 1
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: password123
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d7407694278fd84cce
    command: bash -c "alembic upgrade head && python ."
    tty: true
    expose:
      - 389
      - 636
    ports:
      - "389:389"
      - "636:636"
    depends_on:
      postgres:
        condition: service_healthy

  api:
    image: multidirectory
    container_name: multidirectory_api
    volumes:
      - ./app:/app
    environment:
      DEBUG: 1
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: password123
      SECRET_KEY: 6a0452ae20cab4e21b6e9d18fa4b7bf397dd66ec3968b2d7407694278fd84cce
    command: bash -c "alembic upgrade head && uvicorn --factory web_app:create_app --host 0.0.0.0 --reload"
    tty: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.routers.api.middlewares=api_strip"
      - "traefik.http.middlewares.api_strip.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api_strip.stripprefix.forceslash=false"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: MD-postgres
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: password123
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U user1"]
      interval: 1s
      timeout: 15s
      retries: 10
      start_period: 3s

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    logging:
      driver: "none"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pg.rule=Host(`pg.localhost`)"
      - "traefik.http.routers.pg.entrypoints=web"
      - "traefik.http.services.pg.loadbalancer.server.port=80"

  # ssh:
  #   container_name: md-ssh
  #   image: ssh-ldap
  #   build:
  #     context: ./ssh
  #   environment:
  #     SERVER: "ldap://multidirectory"
  #     BASE: "dc=multifactor,dc=dev"
  #     BIND_DN: "cn=user,dc=multifactor,dc=dev"
  #     BASE_PASSWORD: "password"
  #   restart: "no"

  #   ports:
  #     - "222:22"

  # wireshark:
  #   image: lscr.io/linuxserver/wireshark:latest
  #   container_name: wireshark
  #   cap_add:
  #     - NET_ADMIN
  #   security_opt:
  #     - seccomp:unconfined #optional
  #   # network_mode: host
  #   environment:
  #     - PUID=501
  #     - PGID=20
  #     - TZ=Etc/UTC
  #   volumes:
  #     - wireshark:/config
  #   ports:
  #     - 3000:3000
  #   restart: "no"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.ws.rule=Host(`ws.localhost`)"
  #     - "traefik.http.routers.ws.entrypoints=web"
  #     - "traefik.http.services.ws.loadbalancer.server.port=3000"
  #   logging:
  #     driver: "none"

volumes:
  postgres:
  pgadmin:
  wireshark:

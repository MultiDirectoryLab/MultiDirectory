# For local development

version: "3.7"

services:
  server:
    build:
      context: .
      dockerfile: ./app/local.Dockerfile
    image: multidirectory
    restart: "no" #unless-stopped
    container_name: multidirectory
    volumes:
      - ./app:/app
    environment:
      DEBUG: 1
      HOST: 0.0.0.0
      POSTGRES_USER: user1
      POSTGRES_PWD: password123
      POSTGRES_HOST: postgres
    # command: bash -c "alembic upgrade head && python ."
    tty: true
    expose:
      - 389
    ports:
      - "389:389"
      - "636:636"

  postgres:
    container_name: MD-postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: user1
      POSTGRES_PASSWORD: password123
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
    logging:
      driver: "none"

  ssh-server:
    container_name: ldap-ssh
    image: mwaeckerlin/ssh
    environment:
      LDAPURI: "ldap://multidirectory"
      LDAPBASE: "dc=multifactor,dc=dev"
      LDAPBINDDN: "cn=user 3"
      LDAPBINDPW: "password"
      LDAPBASEUSERDN: "cn=users"
      LDAPBASEGROUPDN: "cn=administrators,cn=main"
    volumes:
      - ./ssh/sshd_config:/etc/ssh/sshd_config
    ports:
      - "222:22"

  wireshark:
    image: lscr.io/linuxserver/wireshark:latest
    container_name: wireshark
    cap_add:
      - NET_ADMIN
    security_opt:
      - seccomp:unconfined #optional
    # network_mode: host
    environment:
      - PUID=501
      - PGID=20
      - TZ=Etc/UTC
    volumes:
      - wireshark:/config
    ports:
      - 3000:3000
    restart: "no"

volumes:
  postgres:
  pgadmin:
  wireshark:
